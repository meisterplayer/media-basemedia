{"version":3,"file":"BaseMedia.js","sources":["../src/js/BaseMedia.js"],"sourcesContent":["class BaseMedia extends Meister.MediaPlugin {\n    constructor(config, meister) {\n        super(config, meister);\n\n        this.player = null;\n\n        this.supports = ['mp4', 'mp3', 'icecast'];\n\n        // HLS behaves like mp4 in samsung devices\n        if (this.meister.browser.isSamsung && !window.MediaSource) {\n            this.supports.push('m3u', 'm3u8');\n        }\n    }\n\n    static get pluginName() {\n        return 'BaseMedia';\n    }\n\n    isItemSupported(item) {\n        return new Promise((resolve) => {\n            if (this.supports.indexOf(item.type) === -1) {\n                return resolve({\n                    supported: false,\n                    errorCode: Meister.ErrorCodes.WRONG_TYPE,\n                });\n            }\n\n            return resolve({\n                supported: true,\n            });\n        });\n    }\n\n    get currentItem() {\n        return this.item;\n    }\n\n    process(item) {\n        return new Promise((resolve, reject) => {\n            this.player = this.meister.getPlayerByType('html5', item);\n\n            if (this.player) {\n                this.item = item;\n\n                // TODO: Shouldn't we check first if there is metadata before we trigger an UI event?\n                this.meister.trigger('uiEvent', { type: 'splash', info: this.item.metadata });\n\n                resolve(item);\n            } else {\n                reject(`${this.name}: Unable to play item ${item.src}, no suitable player available.`); //eslint-disable-line\n            }\n        });\n    }\n\n    load(item) {\n        super.load(item);\n\n        this.player.currentSrc = item.src;\n\n        // Ugly stuff to fix HLS in safari T_T\n        if (item.metadata) {\n            this.meister.trigger('itemMetadata', {\n                title: item.metadata.title,\n            });\n        }\n\n        if (item.type === 'm3u' || item.type === 'm3u8') {\n            this.meister.trigger('itemBitrates', {\n                bitrates: [{ metadata: { bitrate: 0 } }],\n                currentIndex: 0,\n            });\n        }\n\n\n        this.one('playerLoadedMetadata', () => {\n            let isLive = false;\n\n            const duration = this.player.duration;\n            if (duration === Infinity || duration === 0) {\n                isLive = true;\n            }\n\n            this.meister.trigger('itemTimeInfo', {\n                isLive,\n                duration,\n            });\n        });\n\n        this.on('_playerTimeUpdate', this._onPlayerTimeUpdate.bind(this));\n        this.on('_playerSeek', this._onPlayerSeek.bind(this));\n        this.on('requestSeek', this.onRequestSeek.bind(this));\n    }\n\n    unload() {\n        super.unload();\n\n        this.item = null;\n    }\n\n    _onPlayerTimeUpdate() {\n        this.meister.trigger('playerTimeUpdate', {\n            currentTime: this.meister.currentTime,\n            duration: this.meister.duration,\n        });\n    }\n\n    _onPlayerSeek() {\n        const currentTime = this.meister.currentTime;\n        const duration = this.meister.duration;\n        const relativePosition = currentTime / duration;\n\n        this.meister.trigger('playerSeek', {\n            relativePosition,\n            currentTime,\n            duration,\n        });\n    }\n\n    onRequestSeek(e) {\n        let targetTime;\n\n        if (!isNaN(e.relativePosition)) {\n            targetTime = e.relativePosition * this.meister.duration;\n        } else if (!isNaN(e.timeOffset)) {\n            targetTime = this.meister.currentTime + e.timeOffset;\n        }\n\n        // Check whether we are allowed to seek forward.\n        if (this.blockSeekForward && targetTime > this.meister.currentTime) { return; }\n\n        if (Number.isFinite(targetTime)) {\n            this.meister.currentTime = targetTime;\n        }\n    }\n}\n\nMeister.registerPlugin(BaseMedia.pluginName, BaseMedia);\n\nexport default BaseMedia;\n"],"names":["BaseMedia","config","meister","player","supports","browser","isSamsung","window","MediaSource","push","item","Promise","resolve","indexOf","type","Meister","ErrorCodes","WRONG_TYPE","reject","getPlayerByType","trigger","info","metadata","name","src","currentSrc","title","bitrate","one","isLive","duration","Infinity","on","_onPlayerTimeUpdate","bind","_onPlayerSeek","onRequestSeek","currentTime","relativePosition","e","targetTime","isNaN","timeOffset","blockSeekForward","Number","isFinite","MediaPlugin","registerPlugin","pluginName"],"mappings":"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"}